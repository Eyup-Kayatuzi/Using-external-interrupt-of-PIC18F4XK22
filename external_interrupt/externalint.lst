;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22.04.2022 16:18:30
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF2C  	GOTO        88
_interrupt:
;externalint.c,6 :: 		void interrupt(){
;externalint.c,7 :: 		if(INT0IF_bit == 1){
0x0008	0xA2F2      	BTFSS       INT0IF_bit, BitPos(INT0IF_bit+0) 
0x000A	0xD003      	BRA         L_interrupt0
;externalint.c,8 :: 		flag = 1;
0x000C	0x0E01      	MOVLW       1
0x000E	0x6E16      	MOVWF       _flag 
;externalint.c,9 :: 		INT0IF_bit = 0; // clearing of interrupt flag
0x0010	0x92F2      	BCF         INT0IF_bit, BitPos(INT0IF_bit+0) 
;externalint.c,10 :: 		}
L_interrupt0:
;externalint.c,11 :: 		}
L_end_interrupt:
L__interrupt11:
0x0012	0x0011      	RETFIE      1
; end of _interrupt
_Blink_int:
;externalint.c,13 :: 		void Blink_int(){
;externalint.c,14 :: 		for(x =1; x <= 5; x++){ // loop 5 times
0x0014	0x0E01      	MOVLW       1
0x0016	0x6E15      	MOVWF       _x 
L_Blink_int1:
0x0018	0x5015      	MOVF        _x, 0 
0x001A	0x0805      	SUBLW       5
0x001C	0xE31C      	BNC         L_Blink_int2
;externalint.c,15 :: 		LATB.B5 = 1;
0x001E	0x8A8A      	BSF         LATB, 5 
;externalint.c,16 :: 		Delay_ms(200);
0x0020	0x0E03      	MOVLW       3
0x0022	0x6E0B      	MOVWF       R11, 0
0x0024	0x0E08      	MOVLW       8
0x0026	0x6E0C      	MOVWF       R12, 0
0x0028	0x0E77      	MOVLW       119
0x002A	0x6E0D      	MOVWF       R13, 0
L_Blink_int4:
0x002C	0x2E0D      	DECFSZ      R13, 1, 0
0x002E	0xD7FE      	BRA         L_Blink_int4
0x0030	0x2E0C      	DECFSZ      R12, 1, 0
0x0032	0xD7FC      	BRA         L_Blink_int4
0x0034	0x2E0B      	DECFSZ      R11, 1, 0
0x0036	0xD7FA      	BRA         L_Blink_int4
;externalint.c,17 :: 		LATB.B5 = 0;
0x0038	0x9A8A      	BCF         LATB, 5 
;externalint.c,18 :: 		Delay_ms(200);
0x003A	0x0E03      	MOVLW       3
0x003C	0x6E0B      	MOVWF       R11, 0
0x003E	0x0E08      	MOVLW       8
0x0040	0x6E0C      	MOVWF       R12, 0
0x0042	0x0E77      	MOVLW       119
0x0044	0x6E0D      	MOVWF       R13, 0
L_Blink_int5:
0x0046	0x2E0D      	DECFSZ      R13, 1, 0
0x0048	0xD7FE      	BRA         L_Blink_int5
0x004A	0x2E0C      	DECFSZ      R12, 1, 0
0x004C	0xD7FC      	BRA         L_Blink_int5
0x004E	0x2E0B      	DECFSZ      R11, 1, 0
0x0050	0xD7FA      	BRA         L_Blink_int5
;externalint.c,14 :: 		for(x =1; x <= 5; x++){ // loop 5 times
0x0052	0x2A15      	INCF        _x, 1 
;externalint.c,19 :: 		}
0x0054	0xD7E1      	BRA         L_Blink_int1
L_Blink_int2:
;externalint.c,20 :: 		}
L_end_Blink_int:
0x0056	0x0012      	RETURN      0
; end of _Blink_int
_main:
;externalint.c,22 :: 		void main() {
;externalint.c,23 :: 		OSCCON = 0x62;
0x0058	0x0E62      	MOVLW       98
0x005A	0x6ED3      	MOVWF       OSCCON 
;externalint.c,24 :: 		ANSELB = 0; // portb as digital
0x005C	0x010F      	MOVLB       15
0x005E	0x6B39      	CLRF        ANSELB, 1
;externalint.c,25 :: 		TRISB = 0x01; // portb pin 0 input and rest is output
0x0060	0x0E01      	MOVLW       1
0x0062	0x6E93      	MOVWF       TRISB 
;externalint.c,26 :: 		LATB = 0x00;
0x0064	0x6A8A      	CLRF        LATB 
;externalint.c,27 :: 		flag = 0;
0x0066	0x6A16      	CLRF        _flag 
;externalint.c,28 :: 		INTEDG0_bit = 0; // Set interrupt on falling edge
0x0068	0x9CF1      	BCF         INTEDG0_bit, BitPos(INTEDG0_bit+0) 
;externalint.c,29 :: 		INT0IF_bit = 0; // clears int0 flag
0x006A	0x92F2      	BCF         INT0IF_bit, BitPos(INT0IF_bit+0) 
;externalint.c,30 :: 		INT0IE_bit = 1; // enable int0 interrupt
0x006C	0x88F2      	BSF         INT0IE_bit, BitPos(INT0IE_bit+0) 
;externalint.c,31 :: 		GIE_bit = 1; // enable GLOBAL Interrupts
0x006E	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;externalint.c,33 :: 		while(1){ // endless loop
L_main6:
;externalint.c,34 :: 		LATB.B4 = ~LATB.B4;
0x0070	0x788A      	BTG         LATB, 4 
;externalint.c,35 :: 		Delay_ms(1000);
0x0072	0x0E0B      	MOVLW       11
0x0074	0x6E0B      	MOVWF       R11, 0
0x0076	0x0E26      	MOVLW       38
0x0078	0x6E0C      	MOVWF       R12, 0
0x007A	0x0E5D      	MOVLW       93
0x007C	0x6E0D      	MOVWF       R13, 0
L_main8:
0x007E	0x2E0D      	DECFSZ      R13, 1, 0
0x0080	0xD7FE      	BRA         L_main8
0x0082	0x2E0C      	DECFSZ      R12, 1, 0
0x0084	0xD7FC      	BRA         L_main8
0x0086	0x2E0B      	DECFSZ      R11, 1, 0
0x0088	0xD7FA      	BRA         L_main8
0x008A	0x0000      	NOP
0x008C	0x0000      	NOP
;externalint.c,37 :: 		if(flag){ // check if there is an interrupt call
0x008E	0x5216      	MOVF        _flag, 1 
0x0090	0xE002      	BZ          L_main9
;externalint.c,38 :: 		Blink_int();
0x0092	0xDFC0      	RCALL       _Blink_int
;externalint.c,39 :: 		flag = 0;
0x0094	0x6A16      	CLRF        _flag 
;externalint.c,40 :: 		}
L_main9:
;externalint.c,41 :: 		}
0x0096	0xD7EC      	BRA         L_main6
;externalint.c,42 :: 		}
L_end_main:
0x0098	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [12]    _interrupt
0x0014      [68]    _Blink_int
0x0058      [66]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _x
0x0016       [1]    _flag
0x0F39       [1]    ANSELB
0x0F8A       [1]    LATB
0x0F93       [1]    TRISB
0x0FD3       [1]    OSCCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [0]    INTEDG0_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
